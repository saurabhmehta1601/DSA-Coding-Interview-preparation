Find the min distance between two numbers x and y in unsorted array .
Duplicates in array also allowed
May assume both exists in array and are different

How to achieve in O(n)

Approach:::::: So the basic approach is to check only consecutive pairs of x and y. For every element x or y, check the index of the previous occurrence of x or y and if the previous occurring element is not similar to current element update the minimum distance. But a question arises what if an x is preceded by another x and that is preceded by a y, then how to get the minimum distance between pairs. By analyzing closely it can be seen that every x followed by a y or vice versa can only be the closest pair (minimum distance) so ignore all other pairs.
Algorithm:

Create a variable prev=-1 and m= INT_MAX
Traverse through the array from start to end.
If the current element is x or y, prev is not equal to -1 and array[prev] is not equal to current element then update m = max(current_index â€“ prev, m), i.e. find the distance between consecutive pairs and update m with it.
print the value of m